create or replace 
trigger control_reg_ventas
AFTER INSERT OR UPDATE OR DELETE ON Contiene
FOR EACH ROW
declare
vCodigo RESTAURANTES.CODIGO%type;
vFecha PEDIDOS.FECHA_PEDIDO%type;
vFechaRegistro PEDIDOS.FECHA_PEDIDO%type;
BEGIN

SELECT fecha_pedido INTO vFecha
FROM Pedidos
WHERE CODIGOPEDIDO = :NEW.CODIGOPEDIDO;


IF INSERTING THEN

SELECT COD_REST INTO vCodigo
FROM REGISTRO_VENTAS
WHERE COD_REST = :NEW.CODIGO;

UPDATE REGISTRO_VENTAS
SET TOTAL_PEDIDOS = TOTAL_PEDIDOS + :NEW.PRECIOT*:NEW.UDS
WHERE COD_REST = :NEW.CODIGO;
END IF;

IF DELETING THEN

UPDATE REGISTRO_VENTAS
SET TOTAL_PEDIDOS = TOTAL_PEDIDOS - :OLD.PRECIOT*:OLD.UDS
WHERE COD_REST = :NEW.CODIGO;

END IF;

IF UPDATING THEN

SELECT COD_REST INTO vCodigo
FROM REGISTRO_VENTAS
WHERE COD_REST = :NEW.CODIGO;

UPDATE REGISTRO_VENTAS
SET TOTAL_PEDIDOS = TOTAL_PEDIDOS - :OLD.PRECIOT*:OLD.UDS
WHERE COD_REST = :NEW.CODIGO;

UPDATE REGISTRO_VENTAS
SET TOTAL_PEDIDOS = TOTAL_PEDIDOS + :NEW.PRECIOT*:NEW.UDS
WHERE COD_REST = :NEW.CODIGO;

SELECT FECHA_ULT_PEDIDO INTO vFechaRegistro
FROM REGISTRO_VENTAS
WHERE COD_REST = :NEW.CODIGO;

IF vFecha > vFechaRegistro THEN
  UPDATE REGISTRO_VENTAS 
  SET FECHA_ULT_PEDIDO = vFecha
  WHERE COD_REST = :NEW.Codigo;
END IF;

END IF;

EXCEPTION

when NO_DATA_FOUND THEN
 
  INSERT INTO REGISTRO_VENTAS values(:NEW.CODIGO, :NEW.PRECIOT*:NEW.UDS, vFecha);


END; 